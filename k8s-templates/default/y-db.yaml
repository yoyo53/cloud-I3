apiVersion: v1
kind: PersistentVolume
metadata:
  name: y-db-persistent-volume
  labels:
    type: local
    app: y-db
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: /data/y-db
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: y-db-persistent-volume-claim
  labels:
    app: y-db
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: y-db
spec:
  replicas: 2
  selector:
    matchLabels:
      app: y-db
  template:
    metadata:
      labels:
        app: y-db
    spec:
      securityContext:
        fsGroup: 70
      containers:
        - name: y-db
          image: postgres:17-alpine
          imagePullPolicy: Always
          command: ["docker-entrypoint.sh", "-c", "ssl=on", "-c", "ssl_cert_file=/var/lib/postgresql/certs/tls.crt", "-c", "ssl_key_file=/var/lib/postgresql/certs/tls.key"]
          env:
            - name: POSTGRES_PORT
              value: "${POSTGRES_PORT}"
            - name: POSTGRES_DB
              value: ${POSTGRES_DB}
            - name: POSTGRES_USER
              value: ${POSTGRES_USER}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: y-db-secret
                  key: POSTGRES_PASSWORD
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: y-db-volume
            - mountPath: /var/lib/postgresql/certs
              name: y-db-tls-volume
      volumes:
        - name: y-db-volume
          persistentVolumeClaim:
            claimName: y-db-persistent-volume-claim
        - name: y-db-tls-volume
          secret:
            secretName: y-db-tls
            defaultMode: 0640
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: y-db
  name: y-db
spec:
  ports:
    - nodePort: 30001
      port: ${POSTGRES_PORT}
      protocol: TCP
      targetPort: ${POSTGRES_PORT}
  selector:
    app: y-db
  type: NodePort