name: Test and Deploy 🚀

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  test-back:
    name: Test Backend 🧪
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./back
    env:
      POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
      POSTGRES_SSL: ${{ secrets.POSTGRES_SSL }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
    steps:
      - uses: actions/checkout@main
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '19'
      - name: Install dependencies
        run: npm install
      - name: Run tests
        run: npm test
  
  build-back:
    name: Build Backend 🏗️
    runs-on: ubuntu-latest
    needs: test-back
    defaults:
      run:
        working-directory: ./back
    steps:
      - uses: actions/checkout@main
      - name: Set up Docker
        uses: actions/setup-docker@v2
      - name: Build Docker image
        run: docker build -t ghcr.io/${{ github.repository_owner }}/y-back:latest .
      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Push to GitHub Container Registry
        run: docker push ghcr.io/${{ github.repository_owner }}/y-back:latest

  test-front:
    name: Test Frontend 🧪
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./front
    steps:
      - uses: actions/checkout@main
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '19'
      - name: Install dependencies
        run: npm install
      - name: Run tests
        run: npm test
  
  build-front:
    name: Build Frontend 🏗️
    runs-on: ubuntu-latest
    needs: test-front
    defaults:
      run:
        working-directory: ./front
    steps:
      - uses: actions/checkout@main
      - name: Set up Docker
        uses: actions/setup-docker@v2
      - name: Build Docker image
        run: docker build -t ghcr.io/${{ github.repository_owner }}/y-front:latest .
      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Push to GitHub Container Registry
        run: docker push ghcr.io/${{ github.repository_owner }}/y-front:latest

  deploy:
    name: Deploy to Minikube 🚀
    runs-on: self-hosted
    needs: [build-back, build-front]
    steps:
      - uses: actions/checkout@main
      - name: Set up Minikube
        run: minikube start
      - name: Enable Ingress
        run: minikube addons enable ingress
      - name: Setup Ingress
        run: bash setup-ingress-tcp.sh
      - name: Create SSL Keys
        run: bash create-ssl-keys.sh
      - name: Wait for Ingress
        run: kubectl wait pods -n ingress-nginx -l app.kubernetes.io/component=controller --for condition=Ready --timeout=90s
      - name: Deploy
        run: kubectl apply -f k8s
